{"version":3,"sources":["webpack:///./src/biz/count/background.js?6067","webpack:///./src/common/onMessage.js?985f"],"names":["count","MSG_COUNT_SHOW","msg","sender","response","isShow","MSG_COUNT_INCREMENT","registerMessage","messageHandlers","handlers","doListener","responseFn","responseMsg","call","push","event","process","Error","isRegister","chrome","runtime","onMessage","addListener","e","console","log"],"mappings":";;;;;;;;AACA;;AACA;;AAEA,KAAIA,QAAQ,CAAZ;;AAEA,iCAAgBC,mBAAhB,EAAgC,UAACC,GAAD,EAAMC,MAAN,EAAcC,QAAd,EAA2B;AACzDA,YAAS;AACPC,aAAQL,QAAQ;AADT,IAAT;AAGD,EAJD;;AAMA,iCAAgBM,wBAAhB,EAAqC,UAACJ,GAAD,EAAMC,MAAN,EAAcC,QAAd,EAA2B;AAC9DJ,YAAS,CAAT;AACAI,YAAS;AACPJ;AADO,IAAT;AAGD,EALD,E;;;;;;;;;;;;SCegBO,e,GAAAA,e;;AA1BhB;;AAEA,KAAMC,kBAAkB;AACtBC,aAAU,EADY;AAEtBC,aAFsB,sBAEXR,GAFW,EAENC,MAFM,EAEEC,QAFF,EAEY;AAChC,oBAAK,aAAL,EAAoBF,GAApB;AACA,SAAMS,aAAa,SAAbA,UAAa,CAACC,WAAD,EAAiB;AAClC,sBAAK,iBAAL,EAAwBA,WAAxB;AACAR,gBAASQ,WAAT;AACD,MAHD;AAIA,UAAKH,QAAL,CAAcP,GAAd,EAAmBW,IAAnB,CAAwB,IAAxB,EAA8BX,GAA9B,EAAmCC,MAAnC,EAA2CQ,UAA3C;AACD,IATqB;AAUtBG,OAVsB,gBAUjBC,KAViB,EAUVC,OAVU,EAUD;AACnB,SAAI,KAAKP,QAAL,CAAcM,KAAd,CAAJ,EAA0B;AACxB,aAAME,mCAAaF,KAAb,kBAAN;AACD;AACD,SAAI,CAACC,OAAD,IAAY,OAAOA,OAAP,KAAmB,UAAnC,EAA+C;AAC7C,aAAMC,uBAAWF,KAAX,sDAAN;AACD;;AAED,UAAKN,QAAL,CAAcM,KAAd,IAAuBC,OAAvB;AACD;AAnBqB,EAAxB;;AAsBA,KAAIE,aAAa,KAAjB;;AAEO,UAASX,eAAT,CAAyBQ,KAAzB,EAAgCC,OAAhC,EAAyC;AAC9CR,mBAAgBM,IAAhB,CAAqBC,KAArB,EAA4BC,OAA5B;AACE,OAAI,CAACE,UAAL,EAAiB;AACb,SAAG;AACCC,cAAOC,OAAP,CAAeC,SAAf,CAAyBC,WAAzB,CAAqC,UAACpB,GAAD,EAAMC,MAAN,EAAcC,QAAd,EAA2B;AAC5DI,yBAAgBE,UAAhB,CAA2BR,GAA3B,EAAgCC,MAAhC,EAAwCC,QAAxC;AACH,QAFD;AAGH,MAJD,CAIE,OAAMmB,CAAN,EAAS;AACPC,eAAQC,GAAR,CAAY,iBAAZ,EAA+BF,CAA/B;AACH;;AAELL,kBAAa,IAAb;AACC;AACJ,E","file":"0.415972aedfb243ed3bb8.hot-update.js","sourcesContent":["\nimport { MSG_COUNT_SHOW, MSG_COUNT_INCREMENT } from './msg';\nimport { registerMessage } from '../../common/onMessage';\n\nlet count = 0;\n\nregisterMessage(MSG_COUNT_SHOW, (msg, sender, response) => {\n  response({\n    isShow: count < 10\n  });\n});\n\nregisterMessage(MSG_COUNT_INCREMENT, (msg, sender, response) => {\n  count += 1;\n  response({\n    count\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/biz/count/background.js","\nimport { info } from './log';\n\nconst messageHandlers = {\n  handlers: {},\n  doListener(msg, sender, response) {\n    info('[onMessage]', msg);\n    const responseFn = (responseMsg) => {\n      info('[onMessageBack]', responseMsg);\n      response(responseMsg);\n    };\n    this.handlers[msg].call(this, msg, sender, responseFn);\n  },\n  push(event, process) {\n    if (this.handlers[event]) {\n      throw Error(`重复监听${event}事件`);\n    }\n    if (!process || typeof process !== 'function') {\n      throw Error(`监听${event}必须传入回调函数`);\n    }\n\n    this.handlers[event] = process;\n  }\n};\n\nlet isRegister = false;\n\nexport function registerMessage(event, process) {\n  messageHandlers.push(event, process);\n    if (!isRegister) {\n        try{\n            chrome.runtime.onMessage.addListener((msg, sender, response) => {\n                messageHandlers.doListener(msg, sender, response);\n            });\n        } catch(e) {\n            console.log('onMessage error', e)\n        }\n   \n    isRegister = true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/onMessage.js"],"sourceRoot":""}